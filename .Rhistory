load("C:/Users/Rodolfo/Downloads/Plantilla de Validación.xlsx - Tabulación general.csv")
load("C:/Users/Rodolfo/Downloads/Tabulacion.csv")
Tabulacion <- read.csv("C:/Users/Rodolfo/Downloads/Tabulacion.csv", encoding="UTF-8", stringsAsFactors=FALSE)
View(Tabulacion)
View(Tabulacion)
is.numeric(Tabulacion[1,1])
hist(Tabulacion$Precisión)
hist(Tabulacion$Precisión)
?hist
hist(Tabulacion$Precisión, main = "Histograma de Precisión General")
hist(Tabulacion$Precisión, main = "Histograma de Precisión General", xlab="Precisión General", ylab="Frecuencia")
qqplot(Tabulacion$Precisión)
qqnorm(Tabulacion$Precisión)
qqnorm(Tabulacion$Precisión, main="Gráfico Q-Q de Normalidad", xlab="Cuantiles Teóricos", ylab="Cuantiles Observados")
shapiro.test(Tabulacion$Precisión)
library(nortest)
lillie.test(Tabulacion$Precisión)
ad.test(Tabulacion$Precisión)
P1 <- Tabulacion$Precisión ^ 2
hist(P1)
P1 <- log(Tabulacion$Precisión)
hist(P1)
P1 <- Tabulacion$Precisión ^ 4
hist(P1)
shapiro.test(P1)
P1 <- Tabulacion$Precisión ^ 6
shapiro.test(P1)
P1 <- Tabulacion$Precisión ^ (1/2)
shapiro.test(P1)
P1 <- Tabulacion$Precisión ^ 3
shapiro.test(P1)
P1 <- Tabulacion$Precisión ^ 2
shapiro.test(P1)
P1 <- Tabulacion$Precisión ^ 4
shapiro.test(P1)
P1 <- Tabulacion$Precisión ^ 1.5
shapiro.test(P1)
hist(P1)
?log
hist(Tabulacion$Precisión)
P <- Tabulacion$Precisión
max(P)
P1 <- 100 - P
P1Log <- log10(P1)
hist(P1Log)
shapiro.test(P1Log)
P1Log <- log(P1)
hist(P1Log)
shapiro.test(P1Log)
P1Log <- ln(P1)
hist(P1)
P1Log <- log(P1,2)
hist(P1Log)
P1Log <- log(P1,10)
hist(P1Log)
P1Log <- log(P1,2)
hist(P1Log)
shapiro.test(P1Log)
P2 <- P1 ^ 2
P2 <- P1 ^ (1/2)
hist(P2)
shapiro.test(P2)
P4 <- P ^ 4
hist(P4)
P1Log <- log(P1,10)
hist(P1Log)
library(moments)
skewness(P1Log)
hist(P)
P60 <- Tabulacion[P < 60, ]
View(P60)
TabMahal <- Tabulacion[Tabulacion$Algoritmo <> "Mahalanobis Distance"]
TabMahal <- Tabulacion[Tabulacion$Algoritmo != "Mahalanobis Distance"]
TabMahal <- Tabulacion[Tabulacion$Algoritmo != "Mahalanobis Distance", ]
hist[TabMahal$Precisión]
hist(TabMahal$Precisión)
P <- TabMahal$Precisión
P1 <- 100 - P
P2 <- log10(P1)
hist(P2)
shapiro.test(P2)
P1 <- (max(P) + 1) - P
P2 <- P1 ^ (1/2)
hist(P2)
shapiro.test(P2)
P <- Tabulacion$Precisión
P1 <- (max(P) + 1) - P
P2 <- P1 ^ (1/2)
hist(P2)
shapiro.test(P2)
P3 <- log10(1/P1)
hist(P3)
shapiro.test(P2)
shapiro.test(P3)
skewness(P)
P2 <- P1 ^ (1/2)
hist(P2, main="Histograma de Precisión Reflejada con Raíz Cuadrada", xlab="Precisión Reflejada con Raíz Cuadrada", ylab="Frecuencia")
skewness(P2)
shapiro.test(P2)
P2 <- log10(P1)
hist(P2, main="Histograma de Precisión Reflejada con Logaritmo", xlab="Precisión Reflejada con Logaritmo", ylab="Frecuencia")
skewness(P2)
shapiro.test(P2)
P2 <- log10(1 / P1)
hist(P2, main="Histograma de Precisión Reflejada con Transformación Recíproca", xlab="Precisión Reflejada con Transformación Recíproca", ylab="Frecuencia")
skewness(P2)
shapiro.test(P2)
P2 <- asin(P1 ^ (1/2))
P2 <- asin(sqrt(P1))
hist(P2)
A <- Tabulacion$Algoritmo
test <- aov(P ~ A)
summary(test)
test <- kruskal.test(P ~ A)
A <- as.factor(A)
test <- kruskal.test(P ~ A)
summary(test)
kruskalmc(P,A)
library(pgirmess)
kruskalmc(P,A)
kruskal.test(P ~ A)
View(Tabulacion)
?kruskalmc
kMean <- Tabulacion$Precisión[Tabulacion$Algoritmo == "K-Means"]
kIso <- Tabulacion$Precisión[Tabulacion$Algoritmo == "ISO-Data"]
mMean <- mean(kMean)
mIso <- mean(kIso)
sMean <- sd(kMean)
sIso <- sd(kIso)
install.packages("KernSmooth")
library("KernSmooth")
install.packages("rmarkdown")
setwd("C:/Users/Rodolfo/Desktop")
output: html_document
install.packages("ggplot2")
library(ggplot2)
install.packages("lattice")
